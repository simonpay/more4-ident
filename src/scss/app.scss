@import "normalize";
@import "bourbon";
@import "settings";
@import "neat";
@import "scut";


html, body {
    height: 100%;
}

body {
    perspective: 20000px;
    background-color: #333C41;
}

$width: 400px;
$height: $width;

.viewport {
    position: absolute;
    width: $width;
    height: $height;
    top: 50%;
    left: 50%;
    margin: (-$width/2) 0 0 (-$width/2);
    // background: url("../img/2000px-More4_logo.svg.png") 0 0 no-repeat;
    // outline: 1px solid red;
    // background-size: 100%;
    // -webkit-transform-style: preserve-3d;
    // transform: rotate3d(1,1,0,60deg);
}

// the base container for each set of flip triangles
.flip-container {
    position: absolute;
    top: 25%;
    left: 0%;
    width: 25%;
    height: 25%;
    transform: rotate(0deg);
    -webkit-transform-style: preserve-3d;
}
    // mixin to position ans rotate each custom container
    @mixin flip-container($class, $left, $top, $rotate:n) {
        .flip-container--#{$class} {
            left: $left * 1%; // add % symbol
            top: $top * 1%; // add % symbol
            @if $rotate != "n" {
                transform: rotate(#{$rotate}deg);
            }
        }
    }

    // 4 rows of animated flip cards
    // 1st row
    @include flip-container("2-1", 25, 0);
    @include flip-container("3-1", 50, 0, -180);
    // 2nd row
    @include flip-container("1-2", 0, 25);
    @include flip-container("2-2", 25, 25, -180);
    @include flip-container("3-2", 50, 25, -180);
    // 3rd row
    @include flip-container("1-3", 0, 50, -180);
    @include flip-container("2-3", 25, 50, -180);
    @include flip-container("3-3", 50, 50, -180);
    @include flip-container("4-3", 75, 50, -180);
    // 4th row
    @include flip-container("3-4", 50, 75, -180);


// delays
$dur: 1.00s;
$startDelay: 0.3;
$delay1: $dur * 0 + $startDelay;
$delay2: $dur * 0.3 + $startDelay;
$delay3: $dur * 0.6 + $startDelay;
$delay4: $dur * 0.9 + $startDelay;
$delay5: $dur * 1.2 + $startDelay;
$delay6: $dur * 1.5 + $startDelay;
$delay7: $dur * 1.8 + $startDelay;
$delay8: $dur * 2.1 + $startDelay;
$delay9: $dur * 2.4 + $startDelay;
$delay10: $dur * 2.7 + $startDelay;

// set array containing all the delay values
$delay-list: $delay1 $delay2 $delay3 $delay4 $delay5 $delay6 $delay7 $delay8 $delay9 $delay10;

// flip card dimensions
$flip-card-left: 2.5%;
$flip-card-top: $flip-card-left;
$flip-card-width: 100% - $flip-card-top - $flip-card-left;
$flip-card-height: $flip-card-width;

.flip-card {
    // display: none;
    position: absolute;
    width: $flip-card-width;
    height: $flip-card-height;
    top: $flip-card-top;
    left: $flip-card-left;
    transform-origin: 50% 50%;
    // -webkit-animation-name: flip, zindex;
    -webkit-animation-duration: $dur;
    -webkit-animation-timing-function: linear;
    -webkit-animation-iteration-count: 1;
    -webkit-animation-fill-mode: both; // position the el to match the start and end position of the animation
    // -webkit-animation-play-state: paused;
    // -webkit-transform-style: preserve-3d; // do i need this??
    
    .letter-left,
    .letter-right {
        -webkit-animation-duration: $dur;
        -webkit-animation-timing-function: linear;
        -webkit-animation-iteration-count: 1;
        -webkit-animation-fill-mode: both; // position the el to match the start and end position of the animation
        // -webkit-animation-play-state: paused;
    }
}
    
    // first flip card (all)
    .flip-card--first { 
        display: block;
        -webkit-animation-name: flip-start, zindex0;
        -webkit-animation-delay: $delay1;
        // -webkit-animation-play-state: running;

        .letter-right {
            -webkit-animation-name: set-display-right;
            -webkit-animation-delay: $delay1;
        }
        .letter-left {
            -webkit-animation-name: set-display-left;
            -webkit-animation-delay: $delay1;
        }
    }

    // first flip card (just pos 1 + 3)
    .flip-card--first-reverse { 
        display: block;
        -webkit-animation-name: flip-start-reverse, zindex0;
        -webkit-animation-delay: $delay1;
        // -webkit-animation-play-state: running;

        .letter-right {
            -webkit-animation-name: set-display-right;
            -webkit-animation-delay: $delay1;
        }
        .letter-left {
            -webkit-animation-name: set-display-left;
            -webkit-animation-delay: $delay1;
        }
    }

    @each $current-delay in $delay-list {
        $i: index($delay-list, $current-delay);
        .flip-card--#{$i} { 
            -webkit-animation-name: flip, zindex#{$i};
            -webkit-animation-delay: $current-delay;

            .letter-right {
                -webkit-animation-name: set-display-right;
                -webkit-animation-delay: $current-delay;
            }
            .letter-left {
                -webkit-animation-name: set-display-left;
                -webkit-animation-delay: $current-delay;
            }
        }
    }

    // the last card that stays in place at the end of the animation
    .flip-card--dont-animate {
        -webkit-animation-name: rotate-only;
        .letter-right {
            -webkit-animation-name: none;
        }
        .letter-left {
            -webkit-animation-name: none;
            display: none;
        }
    }
    

    // custom delays
    // define class for custom delay
    .delay-250 {
        .flip-card--first,
        .flip-card--first-reverse {
            -webkit-animation-delay: $delay1 + 0.25;
        }
        // loop around delay array
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            { 
                -webkit-animation-delay: $current-delay + 0.25;
            }
        }
    }
    .delay-500 {
        .flip-card--first,
        .flip-card--first-reverse {
            -webkit-animation-delay: $delay1 + 0.5;
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                -webkit-animation-delay: $current-delay + 0.5;
            }
        }
    }
    .delay-750 {
        .flip-card--first,
        .flip-card--first-reverse {
            -webkit-animation-delay: $delay1 + 0.75;
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                -webkit-animation-delay: $current-delay + 0.75;
            }
        }
    }
    .delay-1000 {
        .flip-card--first,
        .flip-card--first-reverse {
            -webkit-animation-delay: $delay1 + 1;
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                -webkit-animation-delay: $current-delay + 1;
            }
        }
    }
    .delay-1250 {
        .flip-card--first,
        .flip-card--first-reverse {
            -webkit-animation-delay: $delay1 + 1.25;
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                -webkit-animation-delay: $current-delay + 1.25;
            }
        }
    }
    .delay-1500 {
        .flip-card--first,
        .flip-card--first-reverse {
            -webkit-animation-delay: $delay1 + 1.5;
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                -webkit-animation-delay: $current-delay + 1.5;
            }
        }
    }


    $dusk      : #949483; // grey
    $ham       : #F47B7B;
    $plum      : #9F1F5C;
    $mandarin  : #EF9020;
    $parsley   : #00AF3E; // green
    $sky       : #85B7E2; // light blue
    $navy      : #29245C;
    $citron    : #FFD616; // yellow
    $kite      : #E5352B; // red
    $rose      : #E990AB;
    $waves     : #0081B4; // mid-blue
    $aqua      : #96CBB3;
    $apple     : #91BE3E;
    $ocean     : #39A6DD;
    $hibiscus  : #EB0973; // pink
    $elephant  : #333C41; // dark grey
    $breeze    : #DDE2E0; // light grey


    // svg triangle fill colors
    .dusk      { fill: $dusk; } // grey
    .ham       { fill: $ham; }
    .plum      { fill: $plum; }
    .mandarin  { fill: $mandarin; }
    .parsley   { fill: $parsley; } // green
    .sky       { fill: $sky; } // light blue
    .navy      { fill: $navy; }
    .citron    { fill: $citron; } // yellow
    .kite      { fill: $kite; } // red
    .rose      { fill: $rose; }
    .waves     { fill: $waves; } // mid-blue
    .aqua      { fill: $aqua; }
    .apple     { fill: $apple; }
    .ocean     { fill: $ocean; }
    .hibiscus  { fill: $hibiscus; } // pink
    .elephant  { fill: $elephant; } // dark grey
    .breeze    { fill: $breeze; } // light grey


// the first flip card 
@-webkit-keyframes flip-start {
    0% {
        transform: rotate(90deg) rotate3d(1, 1, 0, 270deg);
    }
    100% {
        transform: rotate(90deg) rotate3d(1, 1, 0, 180deg);
    }
}

// the 2 flip cards that start by animating to the bottom right
@-webkit-keyframes flip-start-reverse {
    0% {
        transform: rotate(90deg) rotate3d(1, 1, 0, 270deg);
        // opacity: 1;
    }
    // 99.99% {
    //     opacity: 1;
    // }
    100% {
        transform: rotate(90deg) rotate3d(1, 1, 0, 360deg);
        // opacity: 0;
    }
}

// all the other flip cards
@-webkit-keyframes flip {
    0% {
        transform: rotate(90deg) rotate3d(1, 1, 0, 180deg);
    }
    100% {
        transform: rotate(90deg) rotate3d(1, 1, 0, 360deg);
    }
}

// this is to match the positions of the els 
// TODO - make this comment better!
@-webkit-keyframes rotate-only {
    0% {
        transform: rotate(90deg) rotate3d(1, 1, 0, 180deg);
    }
    100% {
        transform: rotate(90deg) rotate3d(1, 1, 0, 180deg);
    }
}

// handle opacity of letters on the left side of the triangles 
@-webkit-keyframes set-display-left {
    0% {
        opacity: 0;
    }
    50% {
        opacity: 0;
    }
    60% {
        opacity: 1;
    }
}

// handle opacity of letters on the right side of the triangles 
@-webkit-keyframes set-display-right {
    0% {
        opacity: 1;
    }
    50% {
        opacity: 1;
    }
    60% {
        opacity: 0;
    }
    100% {
        opacity: 0;
    }
}

$z-index-list: 10 9 8 7 6 5 4 3 2 1 0;
@each $current-delay in $delay-list {
    $i: index($delay-list, $current-delay);
    @-webkit-keyframes zindex#{$i} {
        0% {
            z-index: nth($z-index-list, $i);
        }
    }
}
