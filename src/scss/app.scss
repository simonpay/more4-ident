@import "normalize";
@import "bourbon";
@import "settings";
@import "neat";
@import "scut";

// vars
$theme: "dark";

// view port
$viewport-container-width: 240px;
$viewport-container-height: $viewport-container-width;

// colors
$dusk               : #949483; // grey
$ham                : #F47B7B;
$plum               : #9F1F5C;
$mandarin           : #EF9020;
$parsley            : #00AF3E; // green
$sky                : #85B7E2; // light blue
$navy               : #29245C;
$citron             : #FFD616; // yellow
$kite               : #E5352B; // red
$rose               : #E990AB;
$waves              : #0081B4; // mid-blue
$aqua               : #96CBB3;
$apple              : #91BE3E;
$ocean              : #39A6DD;
$hibiscus           : #EB0973; // pink
$elephant           : #333C41; // dark grey
// $elephant           : #313131; // my site bg
$breeze             : #DDE2E0; // light grey

// background
$background-color: "";
@if $theme == "dark" {
    $background-color:  $elephant;
} @else {
    $background-color:  $breeze;
}
$match-background:      $background-color;
$text-color:            $background-color;

// delays
$dur: 1.00s;
$startDelay: 0.3;
$selayIncrement: 0.3;
$delay1: $dur * ((1 * $selayIncrement) - $selayIncrement) + $startDelay; // (1 * $selayIncrement) - $selayIncrement
$delay2: $dur * ((2 * $selayIncrement) - $selayIncrement) + $startDelay; // (2 * $selayIncrement) - $selayIncrement
$delay3: $dur * ((3 * $selayIncrement) - $selayIncrement) + $startDelay; // (3 * $selayIncrement) - $selayIncrement
$delay4: $dur * ((4 * $selayIncrement) - $selayIncrement) + $startDelay;
$delay5: $dur * ((5 * $selayIncrement) - $selayIncrement) + $startDelay;
$delay6: $dur * ((6 * $selayIncrement) - $selayIncrement) + $startDelay;
$delay7: $dur * ((7 * $selayIncrement) - $selayIncrement) + $startDelay;
$delay8: $dur * ((8 * $selayIncrement) - $selayIncrement) + $startDelay;
$delay9: $dur * ((9 * $selayIncrement) - $selayIncrement) + $startDelay;
$delay10: $dur * ((10 * $selayIncrement) - $selayIncrement) + $startDelay;
$delay11: $dur * ((11 * $selayIncrement) - $selayIncrement) + $startDelay;

// set array containing all the delay values
$delay-list: $delay1 $delay2 $delay3 $delay4 $delay5 $delay6 $delay7 $delay8 $delay9 $delay10 $delay11;


// flip card dimensions
$flip-card-left: 2.5%;
@if $viewport-container-width >= 200px {
    // $flip-card-left: 2.5%;
} @else {
    // $flip-card-left: 4%;
}

$flip-card-top: $flip-card-left;
$flip-card-width: 100% - $flip-card-top - $flip-card-left;
$flip-card-height: $flip-card-width;

html, body {
    height: 100%;
}

body {
    overflow: auto;
    @include perspective(20000px);
    background-color: $background-color;
}

.viewport-container {
    position: absolute;
    width: $viewport-container-width;
    height: $viewport-container-height;
    top: 50%;
    left: 50%;
    margin: (-$viewport-container-width/2) 0 0 (-$viewport-container-width/2);
}
.viewport {
    width: 100%;
    height: 100%;
    // background: url("../img/2000px-More4_logo.svg.png") 0 0 no-repeat;
    // background-size: 100%;
    @include transform-style(preserve-3d);
    // @include transform(rotate3d(1,1,0,180deg)); // this flips the whole thing and shows the reverse -
        // it illustates that the animations work in FF but that the rotation direction is wrong due to a known bug in FF  

}

// the base container for each set of flip triangles
.flip-container {
    position: absolute;
    top: 25%;
    left: 0%;
    width: 25%;
    height: 25%;
    @include transform-style(preserve-3d); // need this to make the z-indexing of individual flips work
}
    // mixin to position and rotate each custom container
    @mixin flip-container($class, $left, $top, $rotate:n) {
        .flip-container--#{$class} {
            left: $left * 1%; // add % symbol
            top: $top * 1%; // add % symbol
            @if $rotate != "n" {
                @include transform(rotate(#{$rotate}deg));
            }
        }
    }

    // 4 rows of animated flip cards
    // 1st row
    @include flip-container("2-1", 25, 0);
    @include flip-container("3-1", 50, 0, -180);
    // 2nd row
    @include flip-container("1-2", 0, 25);
    @include flip-container("2-2", 25, 25, -180);
    @include flip-container("3-2", 50, 25, -180);
    // 3rd row
    @include flip-container("1-3", 0, 50, -180);
    @include flip-container("2-3", 25, 50, -180);
    @include flip-container("3-3", 50, 50, -180);
    @include flip-container("4-3", 75, 50, -180);
    // 4th row
    @include flip-container("3-4", 50, 75, -180);


.flip-card {
    display: none;
    position: absolute;
    width: $flip-card-width;
    height: $flip-card-height;
    top: $flip-card-top;
    left: $flip-card-left;
    @include transform-origin(50% 50%);
    @include animation-duration($dur);
    @include animation-timing-function(linear);
    @include animation-iteration-count(1);
    @include animation-fill-mode(both); // position the el to match the start and end position of the animation
    @include animation-play-state(paused);

    // @include transform-style(flat);
    @include transform-style(preserve-3d); // do i need this??
    
    .letter-left,
    .letter-right {
        @include animation-duration($dur);
        @include animation-timing-function(linear);
        @include animation-iteration-count(1);
        @include animation-fill-mode(both); // position the el to match the start and end position of the animation
        @include animation-play-state(paused);
    }
}
    
    // first flip card (all)
    .flip-card--first { 
        display: block;
        @include animation-name(flip-start-first, zindex0);
        @include animation-delay($delay1);
        @include animation-play-state(running);

        .letter-right {
            @include animation-name(set-display-right);
            @include animation-delay($delay1);
        }
        .letter-left {
            @include animation-name(set-display-left);
            @include animation-delay($delay1);
        }
    }

    // second flip card (all)
    .flip-card--second { 
        display: block;
        @include animation-name(flip-start-second, zindex0);
        @include animation-delay($delay1);
        @include animation-play-state(running);

        .letter-right {
            @include animation-name(set-display-right-second-flip);
            @include animation-delay($delay1);
        }
        .letter-left {
            @include animation-name(set-display-left-second-flip);
            @include animation-delay($delay1);
        }
    }


    @each $current-delay in $delay-list {
        $i: index($delay-list, $current-delay);
        .flip-card--#{$i} { 
            @include animation-name(flip, zindex#{$i});
            // @include animation-name(flip);
            @include animation-delay($current-delay);

            .letter-right {
                @include animation-name(set-display-right);
                @include animation-delay($current-delay);
            }
            .letter-left {
                @include animation-name(set-display-left);
                @include animation-delay($current-delay);
            }

            // these are the half triangles positions 1, 3 & 9
            &.flip-card--half-flip { 
                display: block;
                @include animation-name(flip-half, zindex#{$i});
                @include animation-duration($dur / 2); // divide the duration by 2 as it only covers 50% of the degrees of rotation
            }

        }
    }

    // the last card that stays in place at the end of the animation
    .flip-card--dont-animate {
        // z-index: 0;
        display: none;
        @include animation-name(rotate-only);
        .letter-right {
            @include animation-name(none);
        }
        .letter-left {
            @include animation-name(none);
            display: none;
        }
    }
    

    // custom delays
    // define class for custom delay
    .delay-250 {
        .flip-card--first,
        .flip-card--second,
        {
            @include animation-delay($delay1 + 0.25);
        }
        // loop around delay array
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            { 
                @include animation-delay($current-delay + 0.25);
            }
        }
    }
    .delay-500 {
        .flip-card--first,
        .flip-card--second,
        {
            @include animation-delay($delay1 + 0.5);
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                @include animation-delay($current-delay + 0.5);
            }
        }
    }
    .delay-750 {
        .flip-card--first,
        .flip-card--second,
        {
            @include animation-delay($delay1 + 0.75);
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                @include animation-delay($current-delay + 0.75);
            }
        }
    }
    .delay-1000 {
        .flip-card--first,
        .flip-card--second,
        {
            @include animation-delay($delay1 + 1);
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                @include animation-delay($current-delay + 1);
            }
        }
    }
    .delay-1250 {
        .flip-card--first,
        .flip-card--second,
        {
            @include animation-delay($delay1 + 1.25);
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                @include animation-delay($current-delay + 1.25);
            }
        }
    }
    .delay-1500 {
        .flip-card--first,
        .flip-card--second,
        {
            @include animation-delay($delay1 + 1.5);
        }
        @each $current-delay in $delay-list {
            $i: index($delay-list, $current-delay);
            .flip-card--#{$i},
            .flip-card--#{$i} .letter-right,
            .flip-card--#{$i} .letter-left,
            {
                @include animation-delay($current-delay + 1.5);
            }
        }
    }



    // colors
    .dusk               { fill: $dusk; } // grey
    .ham                { fill: $ham; }
    .plum               { fill: $plum; }
    .mandarin           { fill: $mandarin; }
    .parsley            { fill: $parsley; } // green
    .sky                { fill: $sky; } // light blue
    .navy               { fill: $navy; }
    .citron             { fill: $citron; } // yellow
    .kite               { fill: $kite; } // red
    .rose               { fill: $rose; }
    .waves              { fill: $waves; } // mid-blue
    .aqua               { fill: $aqua; }
    .apple              { fill: $apple; }
    .ocean              { fill: $ocean; }
    .hibiscus           { fill: $hibiscus; } // pink
    .elephant           { fill: $elephant; } // dark grey
    .breeze             { fill: $breeze; } // light grey
    .match-background   { fill: $match-background; } // match the bg color of background for flip containg the E
    .text-color         { fill: $text-color; } // the color of all letters except the E


// the first flip card 
@include keyframes(flip-start-first) {
    0% {
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 90deg));
        opacity: 0;
    }
    1% {
        opacity: 1;
    }
    100% {
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 180deg));
    }
}

// the second flip card 
@include keyframes(flip-start-second) {
    0% {
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 90deg));
        opacity: 0;
    }
    1% {
        opacity: 1;
    }
    100% {
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 0deg));
    }
}

// all the other flip cards
@include keyframes(flip) {
    0% {
        // @include transform(rotate(90deg) rotateX(0deg) rotateY(0deg) rotateZ(0deg));
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 180deg));
        // @include transform(rotateY(180deg));
        // opacity: 0.1; // TODO remove this
    }
    100% {
        // @include transform(rotate(90deg) rotateX(180deg) rotateY(180deg) rotateZ(0deg));
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 0deg));
        // @include transform(rotateY(0deg));
        // @include transform(rotate(90deg) rotate3d(1, 1, 0, 90deg));
        // opacity: 0.5; // TODO remove this
    }
}

// the flips that go half way (pos 1, 3 & 9)
@include keyframes(flip-half) {
    0% {
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 90deg));
        opacity: 0;
    }
    1% {
        opacity: 1;
    }
    100% {
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 0deg));
    }
}

// this is to match the positions of the els 
// TODO - make this comment better!
@include keyframes(rotate-only) {
    0% {
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 180deg));
        z-index: 1;
    }
    100% {
        @include transform(rotate(90deg) rotate3d(1, 1, 0, 180deg));
        z-index: 1;
    }
}

// handle opacity of letters on the left side of the triangles 
@include keyframes(set-display-left) {
    0% {
        opacity: 0;
    }
    50% {
        opacity: 0;
    }
    60% {
        opacity: 1;
    }
}

// handle opacity of letters on the right side of the triangles 
@include keyframes(set-display-right) {
    0% {
        opacity: 1;
    }
    50% {
        opacity: 1;
    }
    60% {
        opacity: 0;
    }
    100% {
        opacity: 0;
    }
}

// animation for opacity of letters on second flip card ONLY
// handle opacity of letters on the left side of the triangles 
@include keyframes(set-display-left-second-flip) {
    0% {
        opacity: 1;
    }
    50% {
        opacity: 1;
    }
    60% {
        opacity: 0;
    }
    100% {
        opacity: 0;
    }
}

// handle opacity of letters on the right side of the triangles 
@include keyframes(set-display-right-second-flip) {
    0% {
        opacity: 0;
    }
    50% {
        opacity: 0;
    }
    60% {
        opacity: 1;
    }
}

$z-index-list: 11 10 9 8 7 6 5 4 3 2 1;
@each $current-delay in $delay-list {
    $i: index($delay-list, $current-delay);
    @include keyframes(zindex#{$i}) {
        0% {
            z-index: nth($z-index-list, $i);
            // left: #{$i}px;
            // opacity: 0.5;
        }
        // 50% {
        //     z-index: nth($z-index-list, $i);
        //     // z-index: $i;
        //     // left: #{$i * 10}px;
        //     // opacity: 0.5;
        // }
        // 51% {
        //     z-index: $i;
        //     // z-index: $i;
        //     // left: #{$i * 10}px;
        //     // opacity: 0.5;
        // }
        // 100% {
        //     z-index: $i;
        //     // left: #{$i * 20}px;
        //     // opacity: 0.5;
        // }
    }
}

// .flip-container--3-1 .flip-card--1,
.flip-container--3-1 .flip-card--2,
.flip-container--3-1 .flip-card--3,
.flip-container--3-1 .flip-card--4,
.flip-container--3-1 .flip-card--5,
.flip-container--3-1 .flip-card--6,
.flip-container--2-1,
{
    // display: none;
}
